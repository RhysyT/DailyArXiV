name: Build Daily arXiv pages

on:
  workflow_dispatch:
  schedule:
    - cron: "10 5 * * 1-5"  # Weekdays 05:10 UTC

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      PYTHONUNBUFFERED: "1"

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.ref_name }}
          persist-credentials: true  # use GITHUB_TOKEN for push

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests beautifulsoup4

      - name: Run generator (and show outputs)
        shell: bash
        run: |
          set -euxo pipefail
          python DailyArXiV.py
          echo "== workspace after generator =="
          ls -al
          echo "== top-level HTML files =="
          ls -1 *.html || true

      - name: Collect outputs into docs/ (dated + stable)
        shell: bash
        run: |
          set -euo pipefail
          mkdir -p docs

          newest=$(ls -1t *_Priority.html 2>/dev/null | head -n1 || true)
          if [ -z "$newest" ]; then
            echo "::error title=No generated files found::Expected *_Priority.html after running DailyArXiV.py"
            exit 1
          fi
          STAMP="${newest%_Priority.html}"
          echo "Using STAMP=$STAMP"
          echo "STAMP=$STAMP" >> "$GITHUB_ENV"

          # Copy dated files (fail if any missing)
          for base in Priority Main Interest; do
            src="${STAMP}_${base}.html"
            [ -f "$src" ] || { echo "::error ::Missing $src"; exit 1; }
            cp "$src" "docs/${STAMP}_${base}.html"
          done

          # Stable "today" URLs
          cp "${STAMP}_Priority.html"  "docs/Priority.html"
          cp "${STAMP}_Main.html"      "docs/Main.html"
          cp "${STAMP}_Interest.html"  "docs/Interest.html"

          # Keep your index.html if present; ensure static serving
          [ -f docs/index.html ] || printf '<!doctype html>\n<title>Daily arXiv</title>\n<h1>Daily arXiv pages</h1>\n<ul>\n<li><a href="Priority.html">Priority</a></li>\n<li><a href="Main.html">Main</a></li>\n<li><a href="Interest.html">Interest</a></li>\n</ul>\n' > docs/index.html
          touch docs/.nojekyll

          echo "== docs/ after copy =="
          ls -al docs

      - name: Commit and push changes (if any)
        shell: bash
        run: |
          set -euxo pipefail

          # Show repo/branch
          git rev-parse --abbrev-ref HEAD || true
          git remote -v || true
          echo "github.ref_name=${{ github.ref_name }}"

          # Configure bot + safe dir
          git config user.name  "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config --global --add safe.directory "$GITHUB_WORKSPACE"

          # Stage everything under docs/ (new + modified)
          git status --porcelain
          git add -A docs
          echo "== STAGED =="
          git diff --cached --name-status || true

          # If nothing staged, bail out quietly
          if git diff --cached --quiet; then
            echo "No changes to commit."
            exit 0
          fi

          # Rebase in case branch moved
          git pull --rebase || true

          git commit -m "Daily arXiv pages: update docs/ (stamp=${STAMP:-unknown})"
          git push
          echo "PUSHED."
